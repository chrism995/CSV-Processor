// <auto-generated />
using System;
using EnergyCustomerAccountProcessorApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnergyCustomerAccountProcessorApi.Migrations
{
    [DbContext(typeof(EnergyContext))]
    partial class EnergyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("EnergyCustomerAccountProcessorApi.Models.MeterReading", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MeterReadValue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MeterReadingDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserAccountID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountId");

                    b.HasIndex("UserAccountID");

                    b.ToTable("MeterReadings");
                });

            modelBuilder.Entity("EnergyCustomerAccountProcessorApi.Models.User", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AccountID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnergyCustomerAccountProcessorApi.Models.MeterReading", b =>
                {
                    b.HasOne("EnergyCustomerAccountProcessorApi.Models.User", null)
                        .WithMany("MeterReadings")
                        .HasForeignKey("UserAccountID");
                });

            modelBuilder.Entity("EnergyCustomerAccountProcessorApi.Models.User", b =>
                {
                    b.Navigation("MeterReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
